name: üé´ Auto Tag

on:
  schedule:
    - cron: '0 1 * * *'  # T√§glich um 01:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  get-latest-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.fetch_version.outputs.version }}
    steps:
      - name: üß∞ Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: üìå Fetch Latest Version
        id: fetch_version
        run: |
          LATEST_VERSION=$(curl -s https://api.vintagestory.at/stable.json | jq -r 'to_entries | map(select(.value.windows.latest == 1)) | .[0].key')
          echo "version=$LATEST_VERSION" >> "$GITHUB_OUTPUT"

  build-and-push:
    runs-on: ubuntu-latest
    needs: get-latest-version
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: üß± Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Create and Push Tag
        id: tagger
        run: |
          VERSION=${{ needs.get-latest-version.outputs.version }}
          echo "Version: $VERSION"
          git config --global user.email "github-actions-bot@cavvoh.github.io"
          git config --global user.name "Cavvoh/GitHub-Actions-Bot"
          if git ls-remote --tags origin | grep -q "refs/tags/$VERSION"; then
            echo "Tag $VERSION already exists, skipping..."
            echo "tag_created=false" >> "$GITHUB_OUTPUT"
          else
            git tag "$VERSION"
            git push origin "$VERSION"
            echo "tag_created=true" >> "$GITHUB_OUTPUT"
          fi

      - name: üê≥ Build and Push
        if: steps.tagger.outputs.tag_created == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            cavvoh/vintage-story-server-arm64:latest
            cavvoh/vintage-story-server-arm64:${{ needs.get-latest-version.outputs.version }}
          build-args: |
            VS_VERSION=${{ needs.get-latest-version.outputs.version }}
            VS_VERSION_TYPE=stable